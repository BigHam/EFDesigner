//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v3.0.0.0
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace EFCore5NetCore3
{
   public partial class Detail1
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected Detail1()
      {
         // NOTE: This class has one-to-one associations with Detail1.
         // One-to-one associations are not validated in constructors since this causes a scenario where each one must be constructed before the other.

         Init();
      }

      /// <summary>
      /// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      /// </summary>
      public static Detail1 CreateDetail1Unsafe()
      {
         return new Detail1();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="b"></param>
      /// <param name="c"></param>
      public Detail1(global::EFCore5NetCore3.Master b, global::EFCore5NetCore3.Master c)
      {
         // NOTE: This class has one-to-one associations with Detail1.
         // One-to-one associations are not validated in constructors since this causes a scenario where each one must be constructed before the other.

         if (b == null) throw new ArgumentNullException(nameof(b));
         this.B = b;

         if (c == null) throw new ArgumentNullException(nameof(c));
         this.C = c;


         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="b"></param>
      /// <param name="c"></param>
      public static Detail1 Create(global::EFCore5NetCore3.Master b, global::EFCore5NetCore3.Master c)
      {
         return new Detail1(b, c);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Indexed, Required
      /// </summary>
      [Key]
      [Required]
      public long Id { get; protected set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::EFCore5NetCore3.Master B { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::EFCore5NetCore3.Master A { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::EFCore5NetCore3.Master C { get; set; }

   }
}

